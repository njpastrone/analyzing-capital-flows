---
title: "Analyzing Data by Currency Regime"
format: html
editor: visual
---

#### Exchange Rate Regime and Net Flows data

### Load libraries

```{r, message=F}
library(tidyverse)
library(readr)
library(stringr)
library(countrycode)
options(scipen = 999)
```

```{r}
net_flows_data_USD <- read_csv("Clean/net_flows_data_USD.csv")
net_flows_data_USD |> head()

```


### Add Grouping for Analyzed Countries


```{r}
eurozone_countries <- c("Portugal","Ireland","Finland","Netherlands, The",
                        "Belgium","Italy","Spain","Austria","France")
soe_countries <- c("Brunei Darussalam","Bahamas, The","Bermuda","Seychelles",
                   "Aruba, Kingdom of the Netherlands","Mauritius","Malta")
baltics_countries <- c("Estonia, Republic of","Latvia, Republic of","Lithuania, Republic of")
iceland <- "Iceland"

net_flows_data_USD <- net_flows_data_USD |> 
  mutate(
    country_group = as.factor(case_when(
      COUNTRY %in% eurozone_countries ~ "Eurozone",
      COUNTRY %in% soe_countries ~ "SOE",
      COUNTRY %in% baltics_countries ~ "Baltics",
      COUNTRY %in% iceland ~ "Iceland",
      TRUE ~ "Other"
    ))
  )

```

### GDP 

```{r}
gdp_data_USD <- read_csv("Clean/gdp_data_USD.csv")
gdp_data_USD |> head()

```

### Exchange Rate Regime Data

```{r}
cleaned_exchange_rate_regime_indicator <- read_csv("Other Data (Not IMF)/exchange_rate_regime/cleaned_exchange_rate_regime_indicator.csv")
cleaned_exchange_rate_regime_indicator |> head()

```
### Pivot (wide -> long by country)

```{r}
pivot_exchange_regime <- function(df) {
  id_cols <- c("year", "month")
  missing_ids <- setdiff(id_cols, names(df))
  if (length(missing_ids) > 0) {
    stop("Missing required id columns: ", paste(missing_ids, collapse = ", "))
  }
  value_cols <- setdiff(names(df), id_cols)
  if (length(value_cols) == 0) {
    stop("No columns to pivot: dataframe only contains ", paste(id_cols, collapse = ", "))
  }
  df <- df %>% mutate(across(all_of(value_cols), as.character))
  has_id_cols <- "id_cols" %in% names(formals(tidyr::pivot_longer))
  long <- if (has_id_cols) {
    tidyr::pivot_longer(df, id_cols = all_of(id_cols),
                        names_to = "COUNTRY", values_to = "currency_regime_type")
  } else {
    tidyr::pivot_longer(df, cols = all_of(value_cols),
                        names_to = "COUNTRY", values_to = "currency_regime_type")
  }
  long %>% mutate(currency_regime_type = factor(currency_regime_type))
}

long_regimes <- pivot_exchange_regime(cleaned_exchange_rate_regime_indicator)

```

### Monthly -> Quarterly (dominant regime within quarter)


```{r}
mode_dominant <- function(x) {
  x <- x[!is.na(x)]
  if (length(x) == 0) return(NA_character_)
  tab <- sort(table(x), decreasing = TRUE)
  if (length(tab) > 1 && tab[1] == tab[2]) return(NA_character_)
  names(tab)[1]
}

to_quarterly_regime <- function(df) {
  orig_levels <- if (is.factor(df$currency_regime_type)) levels(df$currency_regime_type) else NULL
  df %>%
    mutate(quarter = ceiling(month / 3)) %>%
    group_by(COUNTRY, year, quarter) %>%
    summarise(currency_regime_type = mode_dominant(as.character(currency_regime_type)),
              .groups = "drop") %>%
    mutate(currency_regime_type = if (!is.null(orig_levels))
      factor(currency_regime_type, levels = orig_levels) else factor(currency_regime_type))
}

quarterly_regimes <- to_quarterly_regime(long_regimes)
quarterly_regimes |> head()

```

### Add regime labels

```{r}
add_regime_labels <- function(df) {
  df %>%
    mutate(
      regime_code = suppressWarnings(as.integer(as.character(currency_regime_type))),
      regime_simple = case_when(
        regime_code == 1 ~ "Hard peg / narrow band / no separate tender",
        regime_code == 2 ~ "Crawling peg/band (tight, ≤±2%)",
        regime_code == 3 ~ "Crawling band (wider) / managed float",
        regime_code == 4 ~ "Freely floating",
        regime_code == 5 ~ "Freely falling",
        regime_code == 6 ~ "Dual market (parallel data missing)",
        TRUE ~ NA_character_
      ),
      regime_simple = factor(
        regime_simple,
        levels = c(
          "Hard peg / narrow band / no separate tender",
          "Crawling peg/band (tight, ≤±2%)",
          "Crawling band (wider) / managed float",
          "Freely floating",
          "Freely falling",
          "Dual market (parallel data missing)"
        ),
        ordered = TRUE
      )
    ) %>% select(-regime_code)
}

quarterly_regimes_labeled <- quarterly_regimes |> add_regime_labels()

```

### Country joining via ISO3C

```{r}
normalize_country <- function(x) {
  x |>
    str_squish() |>
    str_replace_all("[[:punct:]]", "") |>
    str_to_title()
}

# Prepare flows + GDP (keep GDP for later normalization/weights)
flows_gdp_iso <- net_flows_data_USD |>
  left_join(gdp_data_USD, by = c("COUNTRY", "YEAR" = "TIME_PERIOD")) |>
  rename(
    gdp_usd = `Gross domestic product (GDP), Current prices, US dollar`,
    net_direct_investment_usd = `Net (net acquisition of financial assets less net incurrence of liabilities) - Direct investment, Total financial assets/liabilities`,
    net_portfolio_investment_usd = `Net (net acquisition of financial assets less net incurrence of liabilities) - Portfolio investment, Total financial assets/liabilities`,
    net_other_investment_usd = `Net (net acquisition of financial assets less net incurrence of liabilities) - Other investment, Total financial assets/liabilities`
  ) |>
  mutate(
    net_capital_flows_usd = net_direct_investment_usd + net_portfolio_investment_usd + net_other_investment_usd,
    country_clean = normalize_country(COUNTRY),
    iso3c = countrycode(country_clean, origin = "country.name", destination = "iso3c")
  ) |>
  drop_na(iso3c)  # drop only if not mappable

# Prepare regimes with iso3c
clean_regimes_iso <- quarterly_regimes_labeled |>
  rename(YEAR = year, QUARTER = quarter) |>
  mutate(
    country_clean = normalize_country(COUNTRY),
    iso3c = countrycode(country_clean, origin = "country.name", destination = "iso3c")
  ) |>
  drop_na(iso3c)

```

### Join BOP+GDP with regimes, then complete GDP normalization

```{r}
clean_flows_regimes <- flows_gdp_iso |>
  inner_join(clean_regimes_iso, by = c("iso3c","YEAR","QUARTER")) |>
  # keep original country name from flows
  select(-country_clean.y, -COUNTRY.y) |>
  rename(COUNTRY = COUNTRY.x, country_clean = country_clean.x) |>
  relocate(iso3c, COUNTRY, YEAR, QUARTER, .before = 1) |>
  # compute per-GDP (% of annual GDP) AFTER the join, keeping GDP for weights
  mutate(
    net_flows_pgdp = (net_capital_flows_usd   * 4 / gdp_usd) * 100,
    ndi_pgdp       = (net_direct_investment_usd * 4 / gdp_usd) * 100,
    npi_pgdp       = (net_portfolio_investment_usd * 4 / gdp_usd) * 100,
    noi_pgdp       = (net_other_investment_usd * 4 / gdp_usd) * 100,
    gdp_weight_usd = gdp_usd
  )

clean_flows_regimes |> head()

```

### Simple & GDP-weighted averages by regime

```{r}
# safe weighted mean that ignores NAs and zero/NA weights
wavg <- function(x, w) {
  ok <- !is.na(x) & !is.na(w) & w > 0
  if (!any(ok)) return(NA_real_)
  sum(x[ok] * w[ok]) / sum(w[ok])
}

# By regime, YEAR, QUARTER (time-varying averages)
summary_by_regime_period <- clean_flows_regimes |>
  group_by(regime_simple, YEAR, QUARTER) |>
  summarise(
    n_countries = n_distinct(COUNTRY[!is.na(net_flows_pgdp)]),
    simple_mean_net_flows_pgdp = mean(net_flows_pgdp, na.rm = TRUE),
    gdp_weighted_mean_net_flows_pgdp = wavg(net_flows_pgdp, gdp_weight_usd),

    simple_mean_ndi_pgdp = mean(ndi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_ndi_pgdp = wavg(ndi_pgdp, gdp_weight_usd),

    simple_mean_npi_pgdp = mean(npi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_npi_pgdp = wavg(npi_pgdp, gdp_weight_usd),

    simple_mean_noi_pgdp = mean(noi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_noi_pgdp = wavg(noi_pgdp, gdp_weight_usd),
    .groups = "drop"
  )

summary_by_regime_period |> arrange(regime_simple, YEAR, QUARTER) |> head()

```

### (Optional) Overall averages by regime across the full sample window

```{r}
summary_by_regime_overall <- clean_flows_regimes |>
  group_by(regime_simple) |>
  summarise(
    n_obs = n(),
    n_country_quarters = n_distinct(paste(COUNTRY, YEAR, QUARTER)),
    simple_mean_net_flows_pgdp = mean(net_flows_pgdp, na.rm = TRUE),
    gdp_weighted_mean_net_flows_pgdp = wavg(net_flows_pgdp, gdp_weight_usd),

    simple_mean_ndi_pgdp = mean(ndi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_ndi_pgdp = wavg(ndi_pgdp, gdp_weight_usd),

    simple_mean_npi_pgdp = mean(npi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_npi_pgdp = wavg(npi_pgdp, gdp_weight_usd),

    simple_mean_noi_pgdp = mean(noi_pgdp, na.rm = TRUE),
    gdp_weighted_mean_noi_pgdp = wavg(noi_pgdp, gdp_weight_usd),
    .groups = "drop"
  )

summary_by_regime_overall |> arrange(regime_simple)

```

### Metadata tables

```{r}
clean_flows_regimes |> 
  filter(country_group == "Eurozone") |> 
  count(regime_simple)

clean_flows_regimes |> 
  filter(country_group == "Baltics") |> 
  count(regime_simple)

clean_flows_regimes |> 
  filter(country_group == "Iceland") |> 
  count(regime_simple)

```

### Dominant regime per country (within analyzed groups)

```{r}
clean_flows_regimes %>% 
  filter(country_group != "Other", !is.na(regime_simple)) %>% 
  count(COUNTRY, country_group, regime_simple, name = "n") %>%    
  group_by(COUNTRY, country_group) %>% 
  mutate(pct = n / sum(n)) %>% 
  slice_max(n, n = 1, with_ties = TRUE) %>% 
  arrange(COUNTRY, desc(n)) %>% 
  rename(
    dominant_ex_rate_regime = regime_simple,
    percent_data_in_dominant_group = pct
  ) %>% 
  select(-n) %>% 
  arrange(dominant_ex_rate_regime, country_group)

```








